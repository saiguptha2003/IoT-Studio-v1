# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import iot_service_pb2 as iot__service__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in iot_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class IoTServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartConnection = channel.unary_unary(
                '/iot.IoTService/StartConnection',
                request_serializer=iot__service__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=iot__service__pb2.ConnectionResponse.FromString,
                _registered_method=True)
        self.StopConnection = channel.unary_unary(
                '/iot.IoTService/StopConnection',
                request_serializer=iot__service__pb2.StopConnectionRequest.SerializeToString,
                response_deserializer=iot__service__pb2.StopConnectionResponse.FromString,
                _registered_method=True)
        self.GetConnectionStatus = channel.unary_unary(
                '/iot.IoTService/GetConnectionStatus',
                request_serializer=iot__service__pb2.ConnectionStatusRequest.SerializeToString,
                response_deserializer=iot__service__pb2.ConnectionStatusResponse.FromString,
                _registered_method=True)
        self.DownloadExcelFile = channel.unary_unary(
                '/iot.IoTService/DownloadExcelFile',
                request_serializer=iot__service__pb2.FileDownloadRequest.SerializeToString,
                response_deserializer=iot__service__pb2.FileDownloadResponse.FromString,
                _registered_method=True)


class IoTServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectionStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadExcelFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IoTServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.StartConnection,
                    request_deserializer=iot__service__pb2.ConnectionRequest.FromString,
                    response_serializer=iot__service__pb2.ConnectionResponse.SerializeToString,
            ),
            'StopConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.StopConnection,
                    request_deserializer=iot__service__pb2.StopConnectionRequest.FromString,
                    response_serializer=iot__service__pb2.StopConnectionResponse.SerializeToString,
            ),
            'GetConnectionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectionStatus,
                    request_deserializer=iot__service__pb2.ConnectionStatusRequest.FromString,
                    response_serializer=iot__service__pb2.ConnectionStatusResponse.SerializeToString,
            ),
            'DownloadExcelFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadExcelFile,
                    request_deserializer=iot__service__pb2.FileDownloadRequest.FromString,
                    response_serializer=iot__service__pb2.FileDownloadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'iot.IoTService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('iot.IoTService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IoTService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/iot.IoTService/StartConnection',
            iot__service__pb2.ConnectionRequest.SerializeToString,
            iot__service__pb2.ConnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/iot.IoTService/StopConnection',
            iot__service__pb2.StopConnectionRequest.SerializeToString,
            iot__service__pb2.StopConnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConnectionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/iot.IoTService/GetConnectionStatus',
            iot__service__pb2.ConnectionStatusRequest.SerializeToString,
            iot__service__pb2.ConnectionStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadExcelFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/iot.IoTService/DownloadExcelFile',
            iot__service__pb2.FileDownloadRequest.SerializeToString,
            iot__service__pb2.FileDownloadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
